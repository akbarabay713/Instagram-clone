import Header from "../../components/Header";
import Head from "next/head";
import ProfilePicture from "../../components/ProfilePicture";
import {
  ChevronDownIcon,
  DotsHorizontalIcon,
  UserIcon,
} from "@heroicons/react/solid";
import { collection, orderBy, getDocs } from "firebase/firestore";
import { db, auth } from "../../firebase";
import Container from "./../../components/Container";
import { useAuthState } from "react-firebase-hooks/auth";
import { getUsername } from "./../../helpers/helper";
function ProfilePage({ post, username }) {
  const allPost = JSON.parse(post);
  const length = allPost?.filter((w) => {
    return w.username === username;
  }).length;

  const picture = allPost?.find((w) => {
    return w.username === username;
  });
  const [user] = useAuthState(auth);

  return (
    <>
      <Head>
        <title>Instagram Clone | profile Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className="container lg:w-[61rem] mt-16">
        <div className=" lg:flex items-center justify-center lg:p-4 gap-24">
          <ProfilePicture
            avatar={picture.profileImg}
            width="36"
            height="36"
            flex={false}
            border={true}
            width2={80}
          />
          <div className="basis-9/12">
            {/* first */}
            <div>
              <div className="flex mb-5">
                <p className="text-2xl font-light mr-10">{username}</p>
                <div className="flex gap-2">
                  {username == getUsername(user.displayName) ? (
                    <>
                      <button className="border border-gray-300 rounded px-1">
                        Edit profile
                      </button>
                    </>
                  ) : (
                    <>
                      <button className="border border-gray-300 rounded px-1">
                        Message
                      </button>
                      <button className="border border-gray-300 rounded px-6 ">
                        <UserIcon className="w-5" />
                      </button>
                      <button className="border border-gray-300 rounded px-1">
                        <ChevronDownIcon className="w-5" />
                      </button>
                      <button className="">
                        <DotsHorizontalIcon className="w-5" />
                      </button>
                    </>
                  )}
                </div>
              </div>
              {/* follower */}
              <div className="flex justify-between w-6/12">
                <p>{length} posts</p>
                <p>0 followers</p>
                <p>0 following</p>
              </div>
              <p className="my-5">this is {username}</p>
            </div>
          </div>
        </div>
        <hr />

        <Container posts={allPost} />
      </div>
    </>
  );
}

export default ProfilePage;

export async function getServerSideProps(context) {
  const { id } = context.params;

  const postRef = collection(db, "posts");
  const postRes = await getDocs(postRef, orderBy("timestamp", "desc"));

  const posts = postRes?.docs
    .filter((w) => {
      return w.data().username === id;
    })
    .map((doc) => ({ ...doc.data(), id: doc.id }));
  return {
    props: { post: JSON.stringify(posts), username: id },
  };
}
